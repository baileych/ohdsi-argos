% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/src_argos.R
\name{src_argos}
\alias{src_argos}
\title{Connect to database using config file}
\usage{
src_argos(basenames = NA, dirs = NA, paths = NA, config = NA)
}
\arguments{
\item{basenames}{A vector of file names to use in searching for configuration
file, if \code{paths} is absent.  It defaults to the name of this file.}

\item{dirs}{A vector of directory names to use in searching for configuration
files, if \code{paths} is absent.  It defaults to \verb{$HOME}, the location
of the file containing the calling function, and the location of this file.}

\item{paths}{A vector of full path names for the configuration file.  If present,
only \code{paths} is checked.}

\item{config}{A list containg the configuration data, to be used instead of
reading a configuration file, should you wish to skip that step.}
}
\value{
A \code{\link[dplyr]{src}} object.  The specific class of the object
  is determined by the \code{src_name} in the configuration data.
}
\description{
\code{src_argos} sets up a \pkg{dplyr} or \pkg{DBI} data source
using information from a JSON configuration file, and returns
the data source.
}
\details{
The configuration file must provide all of the information
necessary to set up the \code{\link[dplyr]{src}} or \link[DBI]{DBI}
connection.  Given the variety of ways a data source can be
specified, the JSON must be a two-element hash.  The
\verb{src_name} key points to a string containing name of a
\pkg{dplyr} function that sets up the data source
(e.g. \code{\link[dplyr]{src_postgres}}), or of a \pkg{DBI} driver
method (e.g. \verb{SQLite}), as one might pass to
\link[DBI]{dbDriver}.  If the \verb{src_name} begins with
\code{src_}, it is taken as the former, otherwise it is taken as
the latter.  In this case, an attempt will be made to load an
appropriate \pkg{DBI} library if the driver function is not found.

The \verb{src_args} key points to a nested hash, whose keys are the
arguments to that function, and whose values are the argument
values.

If \code{paths} is present, only the specified paths are checked.
Otherwise, \code{\link{find_config_files}} is called to locate
candidate configuration files, using \code{dirs} and
\code{basenames}, if present.  The first file that exists, is
readable, and evaluates as legal JSON is used as the source of
configuration data.
}
\examples{
\dontrun{
# Search all the (filename-based) defaults
src_argos()

# "The usual"
src_argos('myproj_prod')

# Look around
src_argos( dirs = c(Sys.getenv('PROJ_CONF_DIR'), 'var/lib', getwd()),
           basenames = c('myproj', Sys.getenv('PROJ_NAME')) )

# No defaults
src_argos(paths = c('/path/to/known/config.json'))
}
}

